#!/usr/bin/env sh

/opt/homebrew/bin/yabai -m signal --add event=dock_did_restart action="sudo /opt/homebrew/bin/yabai --load-sa"
sudo /opt/homebrew/bin/yabai --load-sa

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                on
yabai -m config window_opacity               on
yabai -m config window_opacity_duration      0.2
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.80
yabai -m config insert_feedback_color        0xffd0e0e3
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  50
yabai -m config bottom_padding               50
yabai -m config left_padding                 50
yabai -m config right_padding                50
yabai -m config window_gap                   50

# Invisible Insertion Color 0x00FFFFFF

# yabai -m rule --add app=".*" sub-layer=normal
 yabai -m rule --add app!="^(CleanShot X|Screen Studio)$" sub-layer=normal

# Misc
yabai -m rule --add app="^Shortcuts$" subrole="^AXSystemDialog$" manage=off opacity=1.0
yabai -m rule --add app="^CleanShot X$" sticky=on manage=off opacity=1.0
yabai -m rule --add app="^Screen Studio$" manage=off opacity=1.0
yabai -m rule --add app="^Bear$" title="New Note" manage=off

# Apps to Keep Above and Unmanaged
yabai -m rule --add app="^Superkey$|^Notification Cent.*|^Alfred$" manage=off opacity=1.0 sub-layer=above

# Apps to Keep Unmanaged
yabai -m rule --add app="^(FxFactory Agent|TrashMe 3|CrossOver|Find Any File|Keka|Bartender 5|DaisyDisk|OpenIn|Sideloadly!|iStat Menus Status|iStat Menus|Problem Reporter|PastePal|App Store|IINA|System Information|Dropover|Homerow|System Settings|Alfred Preferences|Karabiner-Elements|X-Title Import|Karabiner-EventViewer|BetterTouchTool)$" manage=off opacity=1.0
yabai -m signal --add event=window_created app='^(TrashMe 3|CrossOver|Find Any File|Keka|Bartender 5|DaisyDisk|Sideloadly!|iStat Menus|Problem Reporter|App Store|IINA|System Information|Dropover|System Settings|Alfred Preferences|Karabiner-Elements|X-Title Import|Karabiner-EventViewer|BetterTouchTool)$' action='window="$(yabai -m query --windows --window)"; display="$(/opt/homebrew/bin/yabai -m query --displays --window)"; coords="$(/opt/homebrew/bin/jq --argjson window "$window" --argjson display "$display" -nr "((\$display.frame | .x + .w / 2) - (\$window.frame.w / 2) | tostring) + \":\" + ((\$display.frame | .y + .h / 2) - (\$window.frame.h / 2) | tostring)")"; /opt/homebrew/bin/yabai -m window --move "abs:$coords"'

# Window Titles to Keep Below and Unmanaged
yabai -m rule --add title="^.*Info$|^Copy$|^Trash$|^Open$|^Finder Settings$" manage=off opacity=1.0

# ARC HANDLING OF WINDOWS
# I am not including sub-layer in this rule, since I apply a sub-layer=normal to all apps anyway. I know I can target the first created window with this.
yabai -m rule --add app="^Arc$" title="^Space [0-9]+$|ybf$" manage=off
# This rule can read the title of the window with my tag. But the title changes by the time it gets to my script (triggered by a name change). That is why I give it a sub-layer=above here, to identify it later (the signal can't see my added tag). Arc seems to respect this.
yabai -m rule --add title="ybt$" manage=off sub-layer=above
# After leaving Arc's window unmanaged, Arc will change title to the actual website. And here this signal takes over:
yabai -m signal --add label="littlearc" app='^Arc$' event=window_title_changed action="~/Dropbox/2-Areas/SystemAndApps/Yabai/LittleArc.sh"

# focus window after active space changes
yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

echo "yabai configuration loaded.."
